<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   creationComplete="applicationCreationComplete(event)"
			   backgroundColor="0x000000" xmlns:local="*"
			   >
	
	<fx:Script>
		<![CDATA[
			import mx.core.FlexGlobals;
			import mx.core.IFlexDisplayObject;
			import mx.events.FlexEvent;
			import mx.graphics.ImageSnapshot;
			import mx.managers.PopUpManager;
			
			import snd.SoundManager;
			
			import spark.components.Image;
			import spark.primitives.BitmapImage;
			
			[Embed(source="red-rose.png")]
			public var rose: Class;
			
			public static const SIZE_SCALE: Number = 300;
			public static const ROTATION_RANGE: Number = 180;
			public static const CLEAN_ROSES: Number = 100;
			
			private var timer: Timer = new Timer(1000);
			
			private var Xlimit: Number;
			
			private var Ylimit: Number;
			
			public var counter: uint = 1000000;
			
			public var roseDisplay: RoseDisplay;
			public var controlDisplay: ControlPanel;
			public var timerDisplay: TimerDisplay;
			
			[Bindable]
			public var soundManager: SoundManager;
			
			public function generator(): Object {
				
				Xlimit = FlexGlobals.topLevelApplication.width;
				Ylimit = FlexGlobals.topLevelApplication.height;
				
				var randomX: Number = Math.random() * Xlimit;
				var randomY: Number = Math.random() * Ylimit;
				var randomSize: Number = Math.random() * SIZE_SCALE;
				var randomRotation: Number = Math.random() * ROTATION_RANGE;
				
				var xDeviation: int = -10;
				var yDeviation: int = -10;
				
				return {x: randomX+xDeviation, y: randomY+yDeviation, size: randomSize, rotation: randomRotation};
			}
			
			public function getImage(): BitmapImage {
				var image: BitmapImage = new BitmapImage();
				image.source = rose;
				var rand: Object = generator();
				image.x = rand.x;
				image.y = rand.y;
				image.width = rand.size;
				image.height = rand.size;
				image.rotation = rand.rotation;
				image.alpha = 0.8;
				image.smooth = true;
				return image;
			}
				
			private function makeSnapshot(): void {
				timer.stop();
				var popup: RoseBorderContainer = RoseBorderContainer(PopUpManager.createPopUp(this, RoseBorderContainer, false));
				popup.counter = this.counter;
				PopUpManager.centerPopUp(popup);
				setTimeout(function(): void {
					getSnapshot();
					timer.start();
					setTimeout(function(): void {
						PopUpManager.removePopUp(popup);
					},500)
				},500)
			}
			
			private function getSnapshot(): void {
				var snapshot: ImageSnapshot = ImageSnapshot.captureImage(holder, 300);
				var background: Image = new Image();
				background.source = snapshot.data;
				holder.removeAllElements();
				holder.addElement(background);
				background.percentHeight = 100;
				background.percentWidth = 100;
			}
			
			protected function applicationCreationComplete(event: FlexEvent): void {
				timer.addEventListener(TimerEvent.TIMER, onTimer);
				timerDisplay = TimerDisplay(addDisplay(TimerDisplay));
				timer.start();
				//roseDisplay = RoseDisplay(addDisplay(RoseDisplay));
				//controlDisplay = ControlPanel(addDisplay(ControlPanel));
				
				//soundManager = new SoundManager(new MusicLibrary(["02 Rope.mp3", "03 Dear Rosemary.mp3", "04 White Limo.mp3"]));
			}
			
			private function addDisplay(popupClass: Class): IFlexDisplayObject {
				var popup: IFlexDisplayObject = PopUpManager.createPopUp(this, popupClass);
				PopUpManager.centerPopUp(popup);
				return popup;
			}
			
			private function onTimer(event: TimerEvent): void {
				/* roseDisplay.counter = counter--;
				contentGroup.addElement(getImage());
				holder.addElement(getImage());
				if (counter % CLEAN_ROSES == 0) {
					makeSnapshot();
				} */
				timerDisplay.interrupt();
			}
			
		]]>
	</fx:Script>
	
	<s:Group id="holder"
			 width="100%" height="100%"/>
	
	<!--<local:Header volume="@{soundManager.volume}"/>-->
	
</s:Application>
